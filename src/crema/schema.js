import { z } from 'zod';

export const AddStoreSchema = z.object({
    Store_Code: z.string().min(1, 'store code is required').max(5, 'store code cannot exceed 5 characters'),
    Store_Type: z.string().max(10, 'store type cannot exceed 10 characters').optional(),
    Transaction_Type: z.string().max(10, 'transaction type cannot exceed 10 characters').optional(),
    Store_Name: z.string().min(1, 'store name is required'),
    Representative: z.string().optional(),
    Representative_ID: z.string().max(5, 'representative ID cannot exceed 5 characters').optional(),
    Phone_Number: z.string().optional(),
    Fax_Number: z.string().optional(),
    Email: z.string().optional(),
    Homepage: z.string().optional(),
    Total_Area: z.string().optional(),
    Store_Area: z.string().optional(),
    Parking_Space: z.string().optional(),
    Employee_Count: z.string().optional(),
    Bank_Name: z.string().optional(),
    Account_Number: z.string().optional(),
    Account_Holder: z.string().optional(),
    Transaction_Start_Date: z.string().optional(),
    Transaction_End_Date: z.string().optional(),
    Business_Number_1: z.string().max(3, 'Business Number 1 cannot exceed 3 characters').optional(),
    Business_Number_2: z.string().max(2, 'Business Number 2 cannot exceed 2 characters').optional(),
    Business_Number_3: z.string().max(10, 'Business Number 3 cannot exceed 10 characters').optional(),
    Postal_Code: z.string().max(10, 'Postal Code  cannot exceed 10 characters').optional(),
    Address: z.string().optional(),
    Detailed_Address: z.string().optional(),
    Business_Type: z.string().optional(),
    Business_Category: z.string().optional(),
    Display_Order: z.string().optional(),
    Transaction_Level: z.string().optional(),
    Brand_ID: z.string().optional(),
    Brand_Name: z.string().optional(),
    Viettel_ID: z.string().optional(),
    Viettel_Password: z.string().optional(),
    Template_Code: z.string().max(10, 'Template Code  cannot exceed 10 characters').optional(),
    Invoice_Series: z.string().max(10, 'Invoice Series  cannot exceed 10 characters').optional(),
});

export const AddProductSchema = z.object({
    barcode: z.string().min(1, 'barcode is required'),
    product_name: z.string().min(1, 'product name is required'),
    short_name: z.string().optional(),
    product_type: z.string().optional(),
    transaction_type: z.string().max(10, 'Transaction type cannot exceed 10 characters').optional(),
    specification: z.string().optional(),
    unit: z.string().optional(),
    color: z.string().optional(),
    order_unit: z.string().max(10, 'Order unit cannot exceed 10 characters').optional(),
    tax_code: z.string().max(10, 'Tax code cannot exceed 10 characters').optional(),
    tax_type: z.string().optional(),
    transaction_start_date: z.string().optional(),
    transaction_end_date: z.string().optional(),
    remarks: z.string().optional(),
    purchase_price: z.string().max(11).optional(),
    purchase_tax: z.string().max(11).optional(),
    purchase_amount: z.string().max(11).optional(),
    profit_margin: z.string().max(6).optional(),
    selling_price: z.string().max(11).optional(),
    selling_tax: z.string().max(11).optional(),
    selling_amount: z.string().max(11).optional(),
    consumer_price: z.string().max(11).optional(),
    wholesale_price_1: z.string().max(11).optional(),
    wholesale_price_2: z.string().max(11).optional(),
    wholesale_price_3: z.string().max(11).optional(),
    wholesale_price_4: z.string().max(11).optional(),
    wholesale_price_5: z.string().max(11).optional(),
    wholesale_price_6: z.string().max(11).optional(),
    wholesale_price_7: z.string().max(11).optional(),
    wholesale_price_8: z.string().max(11).optional(),
    wholesale_price_9: z.string().max(11).optional(),
    wholesale_price_10: z.string().max(11).optional(),
    in_box_quantity: z.string().optional(),
    in_box_selling_amount: z.string().optional(),
    in_box_code: z.string().optional(),
    out_box_quantity: z.string().optional(),
    out_box_selling_amount: z.string().max(11).optional(),
    out_box_code: z.string().optional(),
    caton_box_quantity: z.string().optional(),
    caton_box_selling_amount: z.string().max(11).optional(),
    caton_box_code: z.string().optional(),
    discounted_purchase_price: z.string().max(11).optional(),
    discounted_purchase_tax: z.string().max(11).optional(),
    discounted_purchase_amount: z.string().max(11).optional(),
    discounted_profit_margin: z.string().max(11).optional(),
    discounted_selling_price: z.string().max(11).optional(),
    discounted_selling_tax: z.string().max(11).optional(),
    discounted_selling_amount: z.string().max(11).optional(),
    point_application: z.boolean().optional(),
    point_score: z.string().optional(),
    member_price_application: z.boolean().optional(),
    member_price: z.string().max(11).optional(),
    member_tax: z.string().max(11).optional(),
    member_amount: z.string().max(11).optional(),
    discount_start_date: z.string().optional(),
    discount_end_date: z.string().optional(),
});
